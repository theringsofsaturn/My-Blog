{"version":3,"sources":["context/Reducer.js","context/Context.js","component/topbar/TopBar.jsx","assets/blog1.png","component/header/Header.jsx","component/sidebar/Sidebar.jsx","component/post/Post.jsx","component/posts/Posts.jsx","pages/homepage/Homepage.jsx","component/singlePost/SinglePost.jsx","pages/single/Single.jsx","pages/write/Write.jsx","pages/settings/Settings.jsx","pages/login/Login.jsx","pages/register/Register.jsx","App.js","index.js"],"names":["Reducer","state","action","type","user","isFetching","error","payload","INITIAL_STATE","JSON","parse","localStorage","getItem","Context","createContext","ContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","TopBar","useContext","className","src","alt","href","target","to","onClick","profilePic","Header","titleLogo","Sidebar","useState","cats","setCats","getCats","a","axios","get","res","data","map","category","name","Post","post","photo","categories","_id","title","Date","createdAt","toDateString","desc","Posts","posts","Homepage","setPosts","search","useLocation","fetchPosts","SinglePost","path","pathname","split","setPost","setTitle","setDesc","updateMode","setUpdateMode","getPost","handleDelete","delete","username","window","location","replace","handleUpdate","put","autoFocus","onChange","e","Single","Write","file","setFile","handleSubmit","preventDefault","newPost","FormData","filename","now","append","console","log","URL","createObjectURL","onSubmit","htmlFor","id","style","display","files","placeholder","Settings","setUsername","email","setEmail","password","setPassword","success","setSuccess","updatedUser","userId","color","textAlign","marginTop","Login","userRef","useRef","passwordRef","current","ref","disabled","Register","setError","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11098916.chunk.js","sourcesContent":["// A reducer is a function that returns a new state. It takes the current state and an action as arguments. Depending on the action, it may return a new state.\r\nconst Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    // If we have one of these cases (actions), return a new state. Otherwise, return the old state.\r\n\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        isFetching: true, // Because we starting our proccess, fetching data.\r\n        error: false, // In this case we don't have an error, because we are still fetching...\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        user: action.payload, // If the login is succesful, it will return us a user. User will not be NULL anymore, it will be action.payload (-- > payload: user)\r\n        isFetching: false, // After the response is succesful, we will set isFetching to false.\r\n        error: false, // Logically, the error is false.\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null, // The user is NULL, because we failed to login and we have some kind of error.\r\n        isFetching: false, // We are not fetching anymore. We finished this process again.\r\n        error: true, // We have an error, so...\r\n      };\r\n\r\n      case \"UPDATE_START\":\r\n        return {\r\n          ...state,\r\n          isFetching:true\r\n        };\r\n      case \"UPDATE_SUCCESS\":\r\n        return {\r\n          user: action.payload,\r\n          isFetching: false,\r\n          error: false,\r\n        };\r\n      case \"UPDATE_FAILURE\":\r\n        return {\r\n          user: state.user,\r\n          isFetching: false,\r\n          error: true,\r\n        };\r\n\r\n    case \"LOGOUT\":\r\n      return {\r\n        user: null, // We are logging out, so we will set the user to null.\r\n        isFetching: false, // We are not fetching of course\r\n        error: false, // Basically, everything will turn to the initial state again.\r\n      };\r\n    // If we don't have any of these cases, do nothing, just return the old state. Nothing will be changed.\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import { createContext, useEffect, useReducer } from \"react\";\r\nimport Reducer from \"./Reducer\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\r\n  isFetching: false,\r\n  error: false,\r\n};\r\n\r\nexport const Context = createContext(INITIAL_STATE);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  // We can use our state and dispatch to update our state. To do this, we will take it from our Reducers, using useReducer. So, we will indicate and pass into this useReducer our Reducer (that we imported at the top) and our initial state (the state we need to update).\r\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\r\n\r\n  // To be able to save our user even after the page is refreshed, we will use this to save our user in localStorage.\r\n  // ** This is not enough. First, we should fetch the user from the localStorage.\r\n  // Make sure we have this on initial state:  user: JSON.parse(localStorage.getItem(\"user\")) || null\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\r\n  }, [state.user]);  // Whenever the state and user changes, fire this useEffect.\r\n\r\n  return (\r\n    // We can use the 'Context' variable above as our provider. This will allow us to access the state and dispatch from anywhere in our application.\r\n    // We will pass in these values as props to our children. This will allow us to access the state and dispatch from our children, updating our state.\r\n    <Context.Provider\r\n      value={{\r\n        user: state.user,\r\n        isFetching: state.isFetching,\r\n        error: state.error,\r\n        dispatch, // We pass this dispatch, because lets say in our case, when we click on the LOGIN button, we will dispatch LOGIN_START, and according to our server, we will dispatch LOGIN_SUCCESS or LOGIN_FAILURE.\r\n      }}\r\n    >\r\n        {/* Children will be what will be wrapped inside our provider. In this case we will wrapp App.js, so every component can access the state and dispatch. */}\r\n      {children} \r\n    </Context.Provider>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./topbar.css\";\r\n\r\nexport default function TopBar() {\r\n  const { user, dispatch } = useContext(Context);\r\n  const publicFolder = \"http://localhost:3001/images/\";\r\n\r\n  // LOGOUT\r\n  const handleLogout = () => {\r\n    dispatch({ type: \"LOGOUT\" }); \r\n  };\r\n  return (\r\n    <div className=\"top\">\r\n      <div className=\"topLeft\">\r\n        <img\r\n          className=\"logo-left\"\r\n          src=\"https://strive.school/assets/strive_logo_color.svg\"\r\n          alt=\"\"\r\n        />\r\n        <a href=\"https://www.facebook.com/striveschool\" target=\"_blank\">\r\n          {\" \"}\r\n          <i className=\"topIcon fab fa-facebook-square\"></i>\r\n        </a>\r\n        <a\r\n          href=\"https://www.instagram.com/strive.school/?hl=en\"\r\n          target=\"_blank\"\r\n        >\r\n          {\" \"}\r\n          <i className=\"topIcon fab fa-instagram-square\"></i>\r\n        </a>\r\n        <a href=\"https://twitter.com/strive_school\" target=\"_blank\">\r\n          {\" \"}\r\n          <i className=\"topIcon fab fa-twitter-square\"></i>\r\n        </a>\r\n      </div>\r\n      <div className=\"topCenter\">\r\n        <ul className=\"topList\">\r\n          <li className=\"topListItem\">\r\n            <Link className=\"link\" to=\"/\">\r\n              HOME\r\n            </Link>\r\n          </li>\r\n          <li className=\"topListItem\">\r\n            <Link className=\"link\" to=\"/\">\r\n              ABOUT\r\n            </Link>\r\n          </li>\r\n          {/* <li className=\"topListItem\">\r\n            <Link className=\"link\" to=\"/\">\r\n              CONTACT\r\n            </Link>\r\n          </li> */}\r\n          <li className=\"topListItem\">\r\n            <Link className=\"link\" to=\"/write\">\r\n              WRITE\r\n            </Link>\r\n          </li>\r\n          <li className=\"topListItem\" onClick={handleLogout}>\r\n            {/* If there's user, on click Logout */}\r\n            {user && \"LOGOUT\"}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"topRight\">\r\n        {/* If there's user, link to Settings page */}\r\n        {user ? (\r\n          <Link to=\"/settings\">\r\n            <img\r\n              className=\"topImg\"\r\n              // src=\"https://images.gr-assets.com/users/1632342929p8/140785582.jpg\"\r\n              src={publicFolder+user.profilePic}\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n        ) : (\r\n          <ul className=\"topList\">\r\n            <li className=\"topListItem\">\r\n              <Link className=\"link\" to=\"/login\">\r\n                LOGIN\r\n              </Link>\r\n            </li>\r\n            <li className=\"topListItem\">\r\n              <Link className=\"link\" to=\"/register\">\r\n                REGISTER\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        )}\r\n        <i className=\"topSearchIcon fas fa-search\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blog1.6e354e30.png\";","import \"./header.css\";\r\nimport titleLogo from \"../../assets/blog1.png\"\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"headerTitles\">\r\n        <img  \r\n        className=\"headerImgTitle\"\r\n        src={titleLogo} \r\n        alt=\"\" />\r\n        {/* <span className=\"headerTitleSm\">Strive School Students</span> */}\r\n        {/* <span className=\"headerTitleLg\">BLOG</span> */}\r\n      </div>\r\n      {/* <div>\r\n      <img\r\n        className=\"headerImg\"\r\n        src=\"https://strive.school/assets/generics/covers/fullstack.png\"\r\n        alt=\"\"\r\n      />\r\n      </div> */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./sidebar.css\";\r\n\r\nconst Sidebar = () => {\r\n  const [cats, setCats] = useState([]); // Set the categories state to an empty array. This will be filled with the category data.\r\n\r\n  useEffect(() => {\r\n    const getCats = async () => {\r\n      const res = await axios.get(\"http://localhost:3001/api/categories\");\r\n      // console.log(\"Categories Data fetched in the Sidebar\", res.data);\r\n      setCats(res.data);\r\n    };\r\n    getCats();\r\n  }, []); // Empty array as we only want to run this once.\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebarItem\">\r\n        <span className=\"sidebarTitle\">ABOUT US</span>\r\n        <img\r\n          src=\"https://app.strive.school/assets/images/strive_logo_color.svg\"\r\n          alt=\"\"\r\n        />\r\n        <p>\r\n         I am Emilian Kasemi. <br/>\r\n         I'm a Full-Stack Developer, graduating from Strive School.\r\n        </p>\r\n      </div>\r\n      <div className=\"sidebarItem\">\r\n        <span className=\"sidebarTitle\">CATEGORIES</span>\r\n        <ul className=\"sidebarList\">\r\n          {cats.map((category) => (\r\n            <Link to={`/?cat=${category.name}`} className=\"link\">\r\n              <li className=\"sidebarListItem\">{category.name}</li>\r\n            </Link>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"sidebarItem\">\r\n        <span className=\"sidebarTitle\">FOLLOW US</span>\r\n        <div className=\"sidebarSocial\">\r\n          <i className=\"sidebarIcon fab fa-facebook-square\"></i>\r\n          <i className=\"sidebarIcon fab fa-instagram-square\"></i>\r\n          <i className=\"sidebarIcon fab fa-twitter-square\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./post.css\";\r\n\r\n// Taking the {post} from the props in the Posts.jsx component\r\nconst Post = ({ post }) => {\r\n  const publicFolder = \"http://localhost:3001/images/\"; //Images in /api/images/\r\n  return (\r\n    <div className=\"post\">\r\n      {/* If there's post image, show it, if not, just don't show any image */}\r\n      {post.photo && (\r\n        <img className=\"postImg\" src={publicFolder + post.photo} alt=\"\" />\r\n      )}\r\n      <div className=\"postInfo\">\r\n        <div className=\"postCats\">\r\n          {/* For each category in the categories array, render this span ({category.name}) */}\r\n          {post.categories.map((category) => (\r\n            <span className=\"postCat\">{category.name}</span>\r\n          ))}\r\n        </div>\r\n        {/* When click on the title, it will redirect to the post page */}\r\n        <Link to={`/post/${post._id}`} className=\"link\">\r\n          <span className=\"postTitle\">{post.title}</span>\r\n        </Link>\r\n        <hr />\r\n        <span className=\"postDate\">\r\n          {new Date(post.createdAt).toDateString()}\r\n        </span>\r\n      </div>\r\n      <p className=\"postDesc\">{post.desc}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import Post from \"../post/Post\";\r\nimport \"./posts.css\";\r\n\r\n// Taking the {posts} from the props in the Homepage.jsx component\r\nconst Posts = ({ posts }) => {\r\n  // console.log(\"Posts Data fetched in Posts Component\", posts);\r\n  return (\r\n    //********** NEW DYNAMIC CODE *********\r\n    <div className=\"posts\">\r\n      {/* For each post in the posts array, render a Post Component */}\r\n      {posts.map((post) => (\r\n        <Post post={post} />\r\n        // {post} is returning the single Post with properties such as:\r\n        // categories: []\r\n        // desc: \"lorem ipsum...\"\r\n        // title: \"Title of the post\"\r\n        // username: \"theringsofsaturn\"\r\n\r\n        // \"\" Pass this {post} data to the Post component, to get this properties there.\r\n      ))}\r\n    </div>\r\n\r\n    // ******* OLD STATIC CODE ********\r\n    // <div className=\"posts\">\r\n    //  <Post img=\"https://www.scnsoft.com/blog-pictures/cover-pics/react_js.png\" />\r\n    //   <Post img=\"https://c4.wallpaperflare.com/wallpaper/619/468/16/node-js-javascript-wallpaper-preview.jpg\" />\r\n    //   <Post img=\"https://wallpapercave.com/wp/wp8725088.jpg\"/>\r\n    //   <Post img=\"https://raygun.com/blog/wp-content/uploads/2015/04/express1.png\"/>\r\n    //   <Post img=\"https://daqxzxzy8xq3u.cloudfront.net/wp-content/uploads/2019/04/21032431/redux-cover-imgage-1024x768.jpg\"/>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { useLocation } from \"react-router\";\r\nimport Header from \"../../component/header/Header\";\r\nimport Posts from \"../../component/posts/Posts\";\r\nimport Sidebar from \"../../component/sidebar/Sidebar\";\r\nimport \"./homepage.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Homepage = () => {\r\n  // ************** STATES **************\r\n  const [posts, setPosts] = useState([]); // Set the post state to an empty object. This will be filled with the post data.\r\n  const { search } = useLocation(); // Get the search query from the url. If we console.log location for const location = useLocation() we'll see a search property and a value of \"?search=something\", in our case \"?search=user=theringsofsaturn\". so, instead of writing location = useLocation(), we just take the \"search\" property and write: { search } = useLocation()\r\n  // We want this, so when we can get the posts by a specific user.\r\n\r\n  useEffect(() => {\r\n    // *************** FETCHING POSTS ********************\r\n    // When we want to use axios, we need a variable to store the response, as we are using async/await\r\n    const fetchPosts = async () => {\r\n      const res = await axios.get(\"http://localhost:3001/api/posts\" + search); // Fetching posts by a user.\r\n      setPosts(res.data);\r\n      // console.log(\"Posts Data Fetched in the Homepage\", res.data);\r\n    };\r\n    fetchPosts();\r\n  }, [search]); // When the search query changes, we want to fetch the posts again.\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"home\">\r\n        {/* {posts} is the data we get from the api, stored in the state ==> \r\n         I pass it as props to Posts Component  */}\r\n        <Posts posts={posts} />\r\n        <Sidebar />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./singlePost.css\";\r\n\r\nconst SinglePost = () => {\r\n  const location = useLocation(); // Get the location from the URL. If we console log the location, we'll see the pathname property with the post id \"post/123456\" value\r\n  // console.log(\"Location Path\", location);\r\n  const path = location.pathname.split(\"/\")[2]; // Split the pathname by \"/\" and get the third element of the array -> [2] index. This is the post id. -> e.g. \"/post/123456\" -> [\"before /\", \"post\", \"123456\"] -> \"123456\"\r\n\r\n  // **************** STATES ********************\r\n  const [post, setPost] = useState({});\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n  const { user } = useContext(Context);\r\n  const publicFolder = \"http://localhost:3001/images/\";\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      const res = await axios.get(\"http://localhost:3001/api/posts/\" + path);\r\n      // console.log(\"Response for Single Post\", res);\r\n      setPost(res.data);\r\n      setTitle(res.data.title);\r\n      setDesc(res.data.desc);\r\n    };\r\n    getPost();\r\n  }, [path]); // When the path changes, we want to fetch again.\r\n\r\n  // DELETE the post on clicking the trash button\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/api/posts/${post._id}`, {\r\n        data: { username: user.username }, // We can send this data directly because we are using Delete method, not Post. We can write data here. It will not work as with Post method above: + path, { username: user.username }\r\n      });\r\n      window.location.replace(\"/\"); // After deleting the post, we want to go back to the home page.\r\n    } catch (err) {}\r\n  };\r\n\r\n  // UPDATE the post on clicking the edit button\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:3001/api/posts/${post._id}`, {\r\n        username: user.username,\r\n        title, // (same as title: title) We have the variable title in the state. Since they are the same name, we can use only 'title'\r\n        desc, // (same as desc: desc)\r\n      });\r\n      setUpdateMode(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n      <div className=\"singlePostWrapper\">\r\n        {/* If there's post image, show it, if not, just don't show any image */}\r\n        {post.photo && (\r\n          <img\r\n            src={publicFolder + post.photo}\r\n            alt=\"\"\r\n            className=\"singlePostImg\"\r\n          />\r\n        )}\r\n        {/* If it's in update mode, show title as an input field and text area to edit, not the <h1>*/}\r\n        {updateMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            className=\"singlePostTitleInput\"\r\n            autoFocus\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        ) : (\r\n          // And if it's not in update mode, show the h1 title\r\n          <h1 className=\"singlePostTitle\">\r\n            {title}\r\n            {/* If the post's username is the same as the logged in user, then we can edit or delete the post. Also if there's no user (user?) it will not check for any username after, so we will not have any error */}\r\n            {post.username === user?.username && (\r\n              <div className=\"singlePostEdit\">\r\n                <i\r\n                  className=\"singlePostIcon far fa-edit\"\r\n                  onClick={() => setUpdateMode(true)}\r\n                ></i>\r\n                <i\r\n                  className=\"singlePostIcon far fa-trash-alt\"\r\n                  onClick={handleDelete}\r\n                ></i>\r\n              </div>\r\n            )}\r\n          </h1>\r\n        )}\r\n        <div className=\"singlePostInfo\">\r\n          <span className=\"singlePostAuthor\">\r\n            {/* When we click on the username it will redirect to the Homepage with a search query of the username. This will show the posts of that user. */}\r\n            Author:\r\n            <Link to={`/?user=${post.username}`} className=\"link\">\r\n              <b> {post.username}</b>\r\n            </Link>\r\n          </span>\r\n          <span>{new Date(post.createdAt).toDateString()}</span>\r\n        </div>\r\n        {updateMode ? (\r\n          <textarea\r\n            className=\"singlePostDescInput\"\r\n            value={desc}\r\n            onChange={(e) => setDesc(e.target.value)}\r\n          />\r\n        ) : (\r\n          <p className=\"singlePostDesc\">{desc}</p>\r\n        )}\r\n        {updateMode && (\r\n          <button className=\"singlePostButton\" onClick={handleUpdate}>\r\n            Update\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","import Sidebar from \"../../component/sidebar/Sidebar\";\r\nimport SinglePost from \"../../component/singlePost/SinglePost\";\r\nimport \"./single.css\";\r\n\r\nimport React from 'react'\r\n\r\nconst Single = () => {\r\n    return (\r\n        <div className=\"single\">\r\n          <SinglePost />\r\n          <Sidebar />\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Single\r\n","import \"./write.css\";\r\nimport { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nconst Write = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const { user } = useContext(Context);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Post request to server with these required data\r\n    const newPost = {\r\n      username: user.username,\r\n      title,\r\n      desc,\r\n    };\r\n    // We will not send the above directly, because we can upload any image here. In this case, if there's an image, create a formData and a filename.\r\n    // **Note** For the filename, it should be some random number, we can use any id or we can use a basic one, like using the date. If we don't do this, the user can upload the same image multiple times, different images with the same name, and we want to prevent that.\r\n    if (file) {\r\n      const data = new FormData();\r\n      const filename = Date.now() + file.name;\r\n      // When we click the + button, it will take the file and add a filename.\r\n      data.append(\"name\", filename);\r\n      data.append(\"file\", file);\r\n      newPost.photo = filename;\r\n      try {\r\n        await axios.post(\"http://localhost:3001/api/upload\", data);\r\n      } catch (err) {}\r\n    }\r\n    // After uploading the image, we can finally post.\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/api/posts\", newPost);\r\n      // After posting the new post, we want to go the Single Page (Post page)\r\n      window.location.replace(\"/post/\" + res.data._id);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"write\">\r\n      {/* If there's an image, it will create an URL of this file and we will be able to see it above the text as a cover in Write page. */}\r\n      {file && (\r\n        <img className=\"writeImg\" src={URL.createObjectURL(file)} alt=\"\" />\r\n      )}\r\n      <form className=\"writeForm\" onSubmit={handleSubmit}>\r\n        <div className=\"writeFormGroup\">\r\n          <label htmlFor=\"fileInput\">\r\n            <i className=\"writeIcon fas fa-plus\"></i>\r\n          </label>\r\n          <input\r\n            id=\"fileInput\"\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            // Event targeting the image to upload when we choose one (single file, the first one)\r\n            onChange={(e) => setFile(e.target.files[0])}\r\n          />\r\n          <input\r\n            className=\"writeInput\"\r\n            placeholder=\"Title\"\r\n            type=\"text\"\r\n            autoFocus={true}\r\n            // When we type in the title, it will change the state.\r\n            onChange={(e) => setTitle(e.target.value)} \r\n          />\r\n        </div>\r\n        <div className=\"writeFormGroup\">\r\n          <textarea\r\n            className=\"writeInput writeText\"\r\n            placeholder=\"Tell your story...\"\r\n            type=\"text\"\r\n            autoFocus={true}\r\n            // When we type in the description, it will change the state.\r\n            onChange={(e) => setDesc(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"writeSubmit\" type=\"submit\">\r\n          Publish\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n","import \"./settings.css\";\r\nimport Sidebar from \"../../component/sidebar/Sidebar\";\r\nimport axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nconst Settings = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const { user, dispatch } = useContext(Context);\r\n  const publicFolder = \"http://localhost:3001/images/\";\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"UPDATE_START\" });\r\n    const updatedUser = {\r\n      userId: user._id,\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n    if (file) {\r\n      const data = new FormData();\r\n      const filename = Date.now() + file.name;\r\n      data.append(\"name\", filename);\r\n      data.append(\"file\", file);\r\n      updatedUser.profilePic = filename;\r\n      try {\r\n        await axios.post(\"http://localhost:3001/api/upload\", data);\r\n      } catch (err) {}\r\n    }\r\n    try {\r\n    const  res = await axios.put(\r\n        \"http://localhost:3001/api/users/\" + user._id,\r\n        updatedUser\r\n      );\r\n      setSuccess(true);\r\n      dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: \"UPDATE_FAILURE\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settingsWrapper\">\r\n        <div className=\"settingsTitle\">\r\n          <span className=\"settingsUpdateTitle\">Update Your Account</span>\r\n          <span className=\"settingsDeleteTitle\">Delete Account</span>\r\n        </div>\r\n        <form className=\"settingsForm\" onSubmit={handleSubmit}>\r\n          <label>Profile Picture</label>\r\n          <div className=\"settingsPP\">\r\n            <img\r\n              src={\r\n                file\r\n                  ? URL.createObjectURL(file)\r\n                  : publicFolder + user.profilePic\r\n              }\r\n              alt=\"\"\r\n            />\r\n            <label htmlFor=\"fileInput\">\r\n              <i className=\"settingsPPIcon far fa-user-circle\"></i>\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"fileInput\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n            />\r\n          </div>\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={user.username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder={user.email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button className=\"settingsSubmit\" type=\"submit\">\r\n            Update\r\n          </button>\r\n          {success && (\r\n            <span\r\n              style={{ color: \"green\", textAlign: \"center\", marginTop: \"20px\" }}\r\n            >\r\n              Profile has been updated...\r\n            </span>\r\n          )}\r\n        </form>\r\n      </div>\r\n      <Sidebar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import axios from \"axios\";\r\nimport { useContext, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./login.css\";\r\n\r\nconst Login = () => {\r\n  const userRef = useRef();\r\n  const passwordRef = useRef();\r\n  const {dispatch, isFetching } = useContext(Context); // Pass 'user' as a first argument {user, dispatch, isFetching } to console log the user\r\n\r\n  // Function to handle the login form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // When I click the button Login, it will call LOGIN_START action, it will update so, isFetching to true, and we can make our API call.\r\n    dispatch({ type: \"LOGIN_START\" });\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/api/auth/login\", {\r\n        // Pass the data that we required on the backend part\r\n        username: userRef.current.value,\r\n        password: passwordRef.current.value,\r\n      });\r\n      // If there's response, it means it's successful, so we can dispatch LOGIN_SUCCESS action, and we can update the state to the user.\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: \"LOGIN_FAILURE\" });\r\n    }\r\n  };\r\n  // console.log(\"User Login\",user);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <span className=\"loginTitle\">Login</span>\r\n      <form className=\"loginForm\" onSubmit={handleSubmit}>\r\n        <label>Username</label>\r\n        <input\r\n          className=\"loginInput\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your username...\"\r\n          ref={userRef}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          className=\"loginInput\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your password...\"\r\n          ref={passwordRef}\r\n        />\r\n        <button className=\"loginButton\" type=\"submit\" disabled={isFetching}> \r\n        {/* disabled={isFetching} --> Make this disabled if isFetching */}\r\n        {/* Added styles: if disabled, cursor not allowed and red color */}\r\n          Login\r\n        </button>\r\n      </form>\r\n      {/* <button className=\"loginRegisterButton\">Register</button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"./register.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // To prevent refrshing after submitting\r\n    setError(false); // Reset the error state to false.\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/api/auth/register\", {\r\n        // Will send this data when registering as specified in the backend as required.\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      console.log(\"Registration Data\",res);\r\n      // If the response is successful and there are no errors, then redirect to the login page.\r\n      res.data && window.location.replace(\"/login\");\r\n    } catch (err) {\r\n      setError(true); // If any error, set the error state to true. The user will need to write the correct data. \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <span className=\"registerTitle\">Register</span>\r\n      <form className=\"registerForm\" onSubmit={handleSubmit}>\r\n        <label>Username</label>\r\n        <input\r\n          className=\"registerInput\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your username...\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          className=\"registerInput\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your email...\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          className=\"registerInput\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your password...\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button className=\"registerButton\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      {/* <button className=\"registerLoginButton\">\r\n        <Link className=\"link\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </button> */}\r\n      {error && <span style={{color:\"red\", marginTop:\"10px\"}}>Something went wrong!</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import Topbar from \"../src/component/topbar/TopBar\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport Header from \"../src/component/header/Header\";\r\nimport Sidebar from \"../src/component/sidebar/Sidebar\";\r\nimport Posts from \"../src/component/posts/Posts\";\r\nimport Homepage from \"./pages/homepage/Homepage\";\r\nimport Single from \"./pages/single/Single\";\r\nimport Write from \"./pages/write/Write\";\r\nimport Settings from \"./pages/settings/Settings\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Register from \"./pages/register/Register\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../src/context/Context\";\r\n\r\nfunction App() {\r\n  const { user } = useContext(Context);\r\n  return (\r\n    <Router>\r\n      <Topbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Homepage />} />\r\n        <Route path=\"/posts\" element={<Homepage />} />\r\n        <Route path=\"/register\" element={user ? <Homepage /> : <Register />} />\r\n        <Route path=\"/login\" element={user ? <Homepage /> : <Login />} />\r\n        <Route path=\"/post/:id\" element={<Single />} />\r\n        <Route path=\"/write\" element={user ? <Write /> : <Login />} />\r\n        <Route path=\"/settings\" element={user ? <Settings /> : <Login />} />\r\n\r\n        {/* Old react-router-dom syntax */}\r\n        {/* <Route exact path=\"/\">\r\n          <Home />\r\n        </Route> */}\r\n        {/* <Route path=\"/register\">{user ? <Home /> : <Register />}</Route>\r\n        <Route path=\"/login\">{user ? <Home /> : <Login />}</Route>\r\n        <Route path=\"/write\">{user ? <Write /> : <Register />}</Route>\r\n        <Route path=\"/settings\">{user ? <Settings /> : <Register />}</Route> */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ContextProvider } from \"./context/Context\";\r\n {/* Using the Provider here, all components inside App will have access to the context */}\r\n \r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}